function panelHandle = makePanelControls(pluginObj, parentHandle)
%% makePanelControls
%
% Input: parentHandle - handle for uicontrol parent

fontSize = pluginObj.fontSize;
spacing = 2; % px
padding = 2; % px

uiControlsHandles = struct();

mainVbox = uix.VBox('Parent',parentHandle, 'Spacing',spacing, 'Padding',padding);

% vbox Row 1
row1hBox = uix.HBox('Parent',mainVbox, 'Spacing',spacing);
makeRow1Hbox(row1hBox);

% vbox Row 2
uix.Empty('Parent', mainVbox);

% Store Handles
% pluginObj.handles.imagePanel.controls = uiControlsHandles;

%% argout
panelHandle = mainVbox;

%% Nested fn
  function makeRow1Hbox(hBox)
    % openImageButton
    thisTagStr = 'openWindowButton';
    uiControlsHandles.openImageButton = uicontrol(...
      'Tag',[pluginObj.pluginFieldName '_panel_' thisTagStr],...
      'Style','pushbutton',...
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','Open Image',...
      'Callback',@(hObject,eventdata)gvMainWindow_export('imageButton_Callback',hObject,eventdata,guidata(hObject)),...
      'Parent',hBox);
    
    
    % imageTypeLabel
    thisTagStr = 'imageTypeLabel';
    uiControlsHandles.imageTypeLabel = uicontrol(...
      'Tag',[pluginObj.pluginFieldName '_panel_' thisTagStr],...
      'Style','text',...
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','Type:',...
      'Parent',hBox);
    
    
    % imageTypeMenu
    thisTagStr = 'imageTypeMenu';
    uiControlsHandles.imageTypeMenu = uicontrol(...
      'Tag',[pluginObj.pluginFieldName '_panel_' thisTagStr],...
      'Style','popupmenu',...
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','ImageType',...
      'Value',1,...
      'Callback',@(hObject,eventdata)gvMainWindow_export('imageTypeMenu_Callback',hObject,eventdata,guidata(hObject)),...
      'Parent',hBox);
    
      set(hBox, 'Widths',[-2 -1 -3]);
  end
end
