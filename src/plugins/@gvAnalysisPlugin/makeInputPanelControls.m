function makeInputPanelControls(pluginObj, parentHandle)
% params
spacing = 5;
padding = 5;
fontSize = pluginObj.fontSize;
fontHeight = pluginObj.fontHeight;

thisTag = pluginObj.panelTag('scrollingPanel');
scrollingPanel = uix.ScrollingPanel('Tag',thisTag, 'Parent',parentHandle);

panelVbox = uix.VBox('Parent',scrollingPanel, 'Spacing',spacing, 'Padding', padding);

makeHypercubeSourceControls(panelVbox);

makeAnalysisTypeControls(panelVbox);

makeFnNameControls(panelVbox);

makeFnArgsControls(panelVbox);

% set vbox sizes
controlHeight = 1.5*fontHeight + spacing;
vBoxHeights = controlHeight*[1 3 1 .8];
set(panelVbox, 'Heights', vBoxHeights );
set(scrollingPanel, 'Heights', sum(vBoxHeights)+spacing*2+padding*2 );

%% Nested Fn
  function makeHypercubeSourceControls(parentHandle)
    thisHbox = uix.HBox('Parent',parentHandle, 'Spacing',spacing, 'Padding',padding);
    
    % hypercubeSourceText
    thisTag = pluginObj.panelTag('hypercubeSourceText');
    uiControlsHandles.activeHypercubeText= uicontrol(...
      'Tag',thisTag,...
      'Style','text',...
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','Hypercube Source:',...
      'Parent',thisHbox);
    
    % hypercubeMenu
    menuStr = fieldnames(orderfields(pluginObj.controller.model.data));
    activeHypercubeName = pluginObj.controller.view.activeHypercubeName;
    menuValue = find( strcmp( menuStr, activeHypercubeName ) );
    
    if isempty(menuStr)
      menuStr = {'[None]'};
      menuValue = 1;
    elseif isempty(menuValue)
      menuValue = 1;
    end
    
    thisTag = pluginObj.panelTag('hypercubeMenu');
    uiControlsHandles.hypercubeMenu = uicontrol(...
      'Tag',thisTag,...
      'Style','popupmenu',...
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String',menuStr,...
      'Value',menuValue,...
      'UserData',pluginObj.userData,...
      'Callback',@gvMainWindowPlugin.Callback_activeHyperCubeMenu,...
      'Parent',thisHbox);
    
    set(thisHbox, 'Widths',[-1, -2])
  end


  function makeAnalysisTypeControls(parentHandle)
    thisHbox = uix.HBox( 'Parent', parentHandle, 'Spacing', spacing);
    
    % sourceTypeLabel
    thisTag = pluginObj.panelTag('sourceTypeLabel');
    uicontrol(...
      'Tag',thisTag,...
      'Style','text',...    
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','Source Type:',...
      'Parent',thisHbox);
    
    thisTag = pluginObj.panelTag('sourceRadioBox');
    thisVbox = uixVRadioBox( 'Parent', thisHbox, 'Spacing', spacing,...
      'Tag',thisTag, 'Callback',pluginObj.callbackHandle(thisTag));
    
    % hypercubeDataSource
    thisTag = pluginObj.panelTag('hypercubeDataSource');
    uicontrol(...
      'Tag',thisTag,...
      'Style','radiobutton',...  
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','Hypercube Data Array',...
      'UserData',pluginObj.userData,...
      'Parent',thisVbox);
    
    % pointSourceRadio
    thisTag = pluginObj.panelTag('pointSourceRadio');
    uicontrol(...
      'Tag',thisTag,...
      'Style','radiobutton',...  
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','Hypercube Data Points (Arrayfun)',...
      'UserData',pluginObj.userData,...
      'Parent',thisVbox);
    
    % hypercubeObjSource
    thisTag = pluginObj.panelTag('hypercubeObjSource');
    uicontrol(...
      'Tag',thisTag,...
      'Style','radiobutton',...  
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','Hypercube Object',...
      'UserData',pluginObj.userData,...
      'Parent',thisVbox);
    
    set(thisHbox, 'Widths',[-1 -2]);
  end


  function makeFnNameControls(parentHandle)
    thisHbox = uix.HBox('Parent',parentHandle, 'Spacing',spacing, 'Padding',padding);
    
    % fnLabel
    thisTag = pluginObj.panelTag('fnLabel');
    uicontrol(...
      'Tag',thisTag,...
      'Style','text',...
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','Function:',...
      'Parent',thisHbox);
    
    
    % fnMenu
    thisTag = pluginObj.panelTag('fnMenu');
    uicontrol(...
      'Tag',thisTag,...
      'Style','popupmenu',...
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String',pluginObj.getFnList(),...
      'Value',1,...
      'UserData',pluginObj.userData,...
      'Callback',pluginObj.callbackHandle(thisTag),...
      'Parent',thisHbox);
    
    % fnBox
    thisTag = pluginObj.panelTag('fnBox');
    uicontrol(...
      'Tag',thisTag,...
      'Style','edit',...  
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','',...
      'Parent',thisHbox);
    
      set(thisHbox, 'Widths',[-2 -3 -3]);
  end


  function makeFnArgsControls(parentHandle)
    thisHbox = uix.HBox( 'Parent', parentHandle, 'Spacing', spacing);
    
    % fnArgsLabel
    thisTag = pluginObj.panelTag('fnArgsLabel');
    uicontrol(...
      'Tag',thisTag,...
      'Style','text',...    
      'FontUnits','points',...
      'FontSize',fontSize,...
      'String','Func Extra Args:',...
      'Parent',thisHbox);
    
    % fnArgsBox
    thisTag = pluginObj.panelTag('fnArgsBox');
    uicontrol(...
      'Tag',thisTag,...
      'Style','edit',...  
      'FontUnits','points',...
      'FontSize',fontSize,...
      'Parent',thisHbox);
    
    % Set box size
    set(thisHbox, 'Widths',[-1 -2]);
  end

end